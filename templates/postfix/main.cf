# configuration
myhostname = {{ mta_override_hostname | default(inventory_hostname) }}
myorigin = $myhostname

{% if mta_is_destination -%}
# mta_is_destination = True
mydestination = $myhostname
mailbox_command = {{ mta_mailbox_command }}

alias_database =
  {{ mta_alias_database|map('rformat', '%(type)s:%(file)s')|join('\n  ') }}

# mta_alias_maps
alias_maps =
  {{ mta_alias_maps|join('\n  ') }}

{% else -%}
# mta_is_destination is false, reject all mail
# (no sensible destinations)
mydestination =
local_transport = error:5.1.1 Mailbox unavailable
local_recipient_maps =
alias_maps =
alias_database =
{%- endif %}

{% if mta_listen %}
# mta_listen is true
inet_interfaces = {{ mta_listen_interfaces | join(", ") }}
{% else %}
# mta_listen is false
inet_interfaces = loopback-only
master_service_disable = inet
{% endif %}
inet_protocols = all

unknown_local_recipient_reject_code = {{ '450' if mta_soft_bounce else '550' }}
soft_bounce = {{ 'yes' if mta_soft_bounce else 'no' }}

{% if mta_relay_domains -%}
# origin: mta_relay_domains
relay_domains = {{ mta_relay_domains | sort | join(',\n    ') }}
{%- endif %}

{% if mta_transport_map -%}
# origin: mta_transport_map
transport_maps = hash:/etc/postfix/transports
{%- endif %}

{% if mta_listen %}
# origin: mta_listen (requires mta_tls, which is used here)
smtpd_use_tls = yes
smtpd_tls_cert_file = /etc/postfix/ssl.crt
smtpd_tls_key_file = /etc/postfix/ssl.key
smtpd_tls_security_level = {{ mta_tls_security_level }}
smtpd_tls_exclude_ciphers = EXPORT, LOW
tls_ssl_options = NO_COMPRESSION
{% endif %}

smtp_tls_security_level = may

{% if mta_tls_log -%}
# origin: mta_tls_log
smtp_tls_loglevel = 1
smtpd_tls_loglevel = 1
{% endif %}

{% if mta_mynetworks %}
mynetworks = {{ mta_mynetworks | join(", ") }}
{% endif %}

{% if mta_smtpd_upstream_proxy_protocol %}
smtpd_upstream_proxy_protocol = {{ mta_smtpd_upstream_proxy_protocol }}
{% endif %}

{% if mta_listen -%}
# origin: mta_smtpd_helo_required
smtpd_helo_required = {{ "yes" if mta_smtpd_helo_required else "no" }}
# origin: mta_strict_rfc821_envelopes
strict_rfc821_envelopes = {{ "yes" if mta_strict_rfc821_envelopes else "no" }}

# origin: mta_smtpd_restriction_classes
smtpd_restriction_classes =
{% for restriction_class in mta_smtpd_restriction_classes.keys()|sort %}
    {{ restriction_class }}{{ "," if not loop.last else "" }}
{% endfor %}

{% for restriction_class, restrictions in mta_smtpd_restriction_classes|dictsort %}
{{ restriction_class }} =
{% for restriction in restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}
{% endfor %}

# origin: mta_smtpd_client_restrictions
smtpd_client_restrictions =
{% for restriction in mta_smtpd_client_restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_helo_restrictions
smtpd_helo_restrictions =
{% for restriction in mta_smtpd_helo_restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_sender_login_maps
smtpd_sender_login_maps =
{% for map in mta_smtpd_sender_login_maps %}
    {{ map }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_sender_restrictions
smtpd_sender_restrictions =
{% for restriction in mta_smtpd_sender_restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_relay_restrictions
smtpd_relay_restrictions =
{% for restriction in mta_smtpd_relay_restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_recipient_restrictions
smtpd_recipient_restrictions =
{% for restriction in mta_smtpd_recipient_restrictions %}
    {{ restriction }}{{ "," if not loop.last else "" }}
{% endfor %}

# origin: mta_smtpd_data_restrictions
smtpd_data_restrictions = {{ mta_smtpd_data_restrictions | join(",") }}

# origin: mta_smtpd_end_of_data_restrictions
smtpd_end_of_data_restrictions = {{ mta_smtpd_end_of_data_restrictions | join(",") }}

# origin: mta_smtpd_etrn_restrictions
smtpd_etrn_restrictions = {{ mta_smtpd_etrn_restrictions | join(",") }}

{% endif %}

{% if mta_smtpd_milters %}
smtpd_milters =
{%- for smtpd_milter in mta_smtpd_milters %}
  { {{ smtpd_milter.socket }}
    {%- for key, value in smtpd_milter|dictsort -%}
      {%- if key != "socket" -%}
      , {{ key }}={{ value }}
      {%- endif -%}
    {%- endfor -%}
  }{{ "," if not loop.last else "" }}
{%- endfor -%}
{% endif %}

{% if mta_domains -%}
# origin: mta_domains (requires mta_virtual_maps)
virtual_alias_domains = {{ mta_domains | join(", ") }}
{% endif %}

{% if mta_virtual_mailbox_domains -%}
# origin: mta_virtual_mailbox_domains
virtual_mailbox_domains = {{ mta_virtual_mailbox_domains | join(", ") }}
{% endif %}

{% if mta_virtual_transport -%}
# origin: mta_virtual_transport
virtual_transport = {{ mta_virtual_transport }}
{% endif %}

{% if mta_domains or mta_virtual_maps -%}
# origin: mta_virtual_maps
virtual_alias_maps =
{% for item in mta_virtual_maps %}
{% if item is string %}
    {{ item }}
{% elif item is mapping %}
    hash:/etc/postfix/virtual_{{ item.domain }}
{% endif %}
{% endfor %}
{% endif %}

{% if mta_message_size_limit -%}
# origin: mta_message_size_limit
message_size_limit = {{ mta_message_size_limit }}
{% endif %}

{% if mta_postscreen -%}
# origin: mta_postscreen
postscreen_access_list = permit_mynetworks

{% if mta_postscreen.greet | default(False) -%}
# origin: mta_postscreen.greet
postscreen_greet_action = {{ mta_postscreen.greet.action }}
{% if mta_postscreen.greet.banner | default(False) -%}
# origin: mta_postscreen.greet.banner
postscreen_greet_banner = {{ inventory_hostname }} {{ mta_postscreen.greet.banner }}
{%- endif %}
{%- endif %}

{% if mta_postscreen.dnsbl | default(False) -%}
# origin: mta_postscreen.dnsbl
postscreen_dnsbl_sites = {{ mta_postscreen.dnsbl.sites | join(", ") }}
postscreen_dnsbl_action = {{ mta_postscreen.dnsbl.action }}
postscreen_dnsbl_threshold = {{ mta_postscreen.dnsbl.threshold }}
{%- endif %}

{%- endif %}

{% if mta_delay_warning -%}
# origin: mta_delay_warning
delay_warning_time = {{ mta_delay_warning }}
{%- endif %}

{% if mta_relayhost -%}
# origin: mta_relayhost
relayhost = {{ mta_relayhost }}
{% if mta_relayhost_auth -%}
# origin: mta_relayhost and mta_relayhost_auth
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:{{ mta_relayhost_auth.mapfile }}
smtp_sasl_mechansim_filter =
smtp_sasl_security_options =
{% endif %}
{% endif %}

{% if mta_recipient_delimiter %}
recipient_delimiter = {{ mta_recipient_delimiter }}
{% endif %}

message_size_limit = {{ mta_message_size_limit }}

{% if mta_unverified_recipient_reject_code %}
# origin: mta_unverified_recipient_reject_code
unverified_recipient_reject_code = {{ mta_unverified_recipient_reject_code }}
{% endif %}

{% for key, value in mta_parameters|dictsort -%}
  {{ key }}=
  {%- if value is mapping -%}
    inline:{ {{ value | dictsort | map('join', ' = ') | map('regex_replace', '^(.*)$', '{ \\1 }') | join(', ') }} }
  {%- elif value is sequence and not value is string -%}
    {{ value | join(', ') }}
  {#- With Jinja 2.11: value is boolean -#}
  {%- elif value is sameas true or value is sameas false -%}
    {{ 'yes' if value else 'no' }}
  {%- else -%}
    {{ value }}
  {%- endif -%}
  {{ '\n' }}
{%- endfor %}

{% for service in mta_services %}
  {% if service.transport_config is defined %}
# origin: mta_services[{{ service.service }}].transport_config
    {% for key, value in service.transport_config|dictsort %}
{{ service.service }}_{{ key }} = {{ value }}
    {% endfor %}
  {% endif %}
{% endfor %}
